# Copyright (c) 2023, Meta
#
# SPDX-License-Identifier: Apache-2.0

source "Kconfig.zephyr"

config TEST_NUM_CPUS
	int "Number of CPUs to use in parallel"
	range 1 MP_NUM_CPUS
	default MP_NUM_CPUS
	help
	  The number of parallel threads to run during the test. The test
	  thread itself yields so that all cores have some probability of
	  causing racey behaviour.

config TEST_DURATION_S
	int "Number of seconds to run the test"
	range 1 21600
	default 8000
	help
	   Duration for the test, in seconds. The range has a reblatively high
	   upper bound because we should expect that pthread_create() and
	   pthread_join() are stable enough to run for an arbitrarily long
	   period of time without encountering any race conditions.

config TEST_DELAY_US
	int "Microseconds to delay between pthread join and create"
	default 0
	help
	  If there is a race condition, a value of zero here should
	  cause a crash.

config TEST_STACK_SIZE
	int "Size of each thread stack in this test"
	default 2048 if !64_BIT
	default 4096 if 64_BIT
	help
	  A common stack size for this test that works across all platforms.

config TEST_PTHREADS
	bool "Test pthreads in addition to k_threads"
	help
	  As it turns out, calling k_thread_create() and k_thread_join() in quick
	  succession is also still a bit racey. We need to iron out the race
	  conditions with k_threads before being confident that pthreads are
	  race-free.
